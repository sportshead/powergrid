name: Build Docker images

on:
  push:
    branches:
      - "**/*"
    tags:
      - "v*"
    paths-ignore:
      - "charts/**"
      - "README.md"

jobs:
  coordinator:
    name: Build coordinator
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/sportshead/powergrid-coordinator
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=ref,event=branch
            type=edge,branch=master
            type=sha
      - name: Cache go-pkg-mod
        uses: actions/cache@v3
        with:
          path: go-pkg-mod
          key: ${{ runner.os }}-go-pkg-mod-${{ hashFiles('**/go.sum') }}
      - name: Cache go-build-cache
        uses: actions/cache@v3
        with:
          path: go-build-cache
          key: ${{ runner.os }}-go-build-cache-${{ hashFiles('**/go.sum') }}
      - name: Inject go-pkg-mod
        uses: reproducible-containers/buildkit-cache-dance@v2.1.3
        with:
          cache-source: go-pkg-mod
          cache-target: /go/pkg/mod
      - name: Inject go-build-cache
        uses: reproducible-containers/buildkit-cache-dance@v2.1.3
        with:
          cache-source: go-build-cache
          cache-target: /root/.cache/go-build
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: "{{defaultContext}}:coordinator"
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            GIT_HASH=${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
  bun:
    name: Build examples/bun
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/sportshead/powergrid-examples-bun
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=ref,event=branch
            type=edge,branch=master
            type=sha
      - name: Cache bun-cache
        uses: actions/cache@v3
        with:
          path: bun-cache
          key: ${{ runner.os }}-bun-cache-${{ hashFiles('examples/bun/bun.lockb') }}
      - name: Inject bun-cache
        uses: reproducible-containers/buildkit-cache-dance@v2.1.3
        with:
          cache-source: bun-cache
          cache-target: /root/.bun/install/cache
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: "{{defaultContext}}:examples/bun"
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
